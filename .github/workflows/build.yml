name: Create Release Build

on:
  release:
    types: [released, prereleased]

jobs:
  check-release:
    name: Release Prefix
    runs-on: ubuntu-latest
    #     This is to know if the reference of the trigger i.e the tag is a release or prerelease. Later to avoid any release which are not created or in Draft state.
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
    - name: Check the release details
      id: release_prefix
      run: |
        gh release view ${{ github.ref_name }} --json isPrerelease,isDraft --jq 'if .isPrerelease==false and .isDraft==false then "release" elif .isPrerelease==true and .isDraft==false then "prerelease" else "draft" end' >> release-prefix.json
        echo "prefix is `cat release-prefix.json`"
        echo "prefix=`cat release-prefix.json`" >> $GITHUB_OUTPUT
    outputs:
      prefix: ${{ steps.release_prefix.outputs.prefix }}

  check-history:
    name: Check if release is behind
    runs-on: ubuntu-latest
    needs: check-release
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Compare history
      id: history
      run: |
        git checkout master
        TAG_META=$( git tag ${{ github.ref_name }} --contains master )
        echo "${TAG_META}"
        if [ "${TAG_META}"=="${{ github.ref_name }}" ]; then
          echo "clean"
          echo "clean=true" >> $GITHUB_OUTPUT
        else
          echo "Not clean"
          echo "clean=false" >> $GITHUB_OUTPUT
        fi
    outputs:
      clean: ${{ steps.history.outputs.clean }}


  build:
    name: Build
    needs: [ check-release, check-history ]
    if: needs.check-history.outputs.clean && ( needs.check-release.outputs.prefix == 'release' || needs.check-release.outputs.prefix == 'prerelease' )
    uses: yapsody/actions/.github/workflows/ecr-build-push.yml@master
    secrets: inherit
    with:
      release: "${{ github.ref_name }}"
